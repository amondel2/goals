buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:1.4"
        classpath 'org.grails.plugins:database-migration:3.0.4'
        classpath "org.grails.plugins:views-gradle:1.2.10"
    }
}

version "0.20"
group "goals"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"
apply plugin:"com.energizedwork.webdriver-binaries"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-test-mixins:3.3.0"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile("org.grails.plugins:geb") {
        exclude group: 'org.gebish', module: 'geb-spock'
    }
    testCompile 'org.gebish:geb-spock:2.1'
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.6.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.6.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.6.0"
    compile 'org.grails.plugins:spring-security-ui:3.1.2'
    runtime 'mysql:mysql-connector-java:8.0.15'
    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'
    compile 'org.apache.poi:ooxml-schemas:1.4'
    compile 'org.grails.plugins:excel-import:3.0.2', {  exclude  module: 'poi-ooxml'
        exclude  module: 'poi'
        exclude  module: 'ooxml-schemas'
    }
    compile "org.grails.plugins:excel-export:2.1", {  exclude  module: 'poi-ooxml'
        exclude  module: 'poi'
        exclude  module: 'ooxml-schemas'
    }
    compile "org.grails.plugins:ckeditor:4.5.9.0"
    compile 'org.grails.plugins:database-migration:3.0.4'
    compile 'org.liquibase:liquibase-core:3.5.5'
    compile('org.grails.plugins:grails-melody-plugin:1.74.0') {
        exclude group: 'net.bull.javamelody', module: 'javamelody-core'
    }
    compile 'net.bull.javamelody:javamelody-core:1.76.0'
    compile group: 'org.docx4j', name: 'docx4j', version: '6.1.1'
    compile group: 'org.docx4j', name: 'docx4j-ImportXHTML', version: '6.1.0'
    compile('javax.xml.bind:jaxb-api:2.3.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'log4j', module: 'log4j'
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

webdriverBinaries {
    chromedriver '2.40'
    geckodriver '0.21.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions.forkOptions) {
        memoryMaximumSize = '4g'
        jvmArgs = ['-XX:MaxPermSize=2g', '-Xms2g', '-Xmx4g']
    }
}

tasks.withType(War) {
    doLast {
        exec {
           executable './release.sh'
        }
    }
}




assets {
    minifyJs = true
    minifyCss = true

    minifyOptions = [
            languageMode: 'ES6',
            targetLanguage: 'ES6', //Can go from ES6 to ES5 for those bleeding edgers
            optimizationLevel: 'WHITESPACE_ONLY' //Or ADVANCED or WHITESPACE_ONLY
    ]
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}